<#@ template language="C#" #>
<#@ output extension=".cs" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>// generated by template, do not modify manually

namespace Coplt.Universes.Core;

public abstract partial class TypeSet
{
<#
    for (var i = 1; i <= 64; i++)
    {
        var types = string.Join(", ", Enumerable.Range(0, i).Select(n => $"T{n}"));
        var set = i == 1 ? "S<T0>" : Enumerable.Range(1, i - 1).Select(n => $"T{n}").Aggregate("S<T0>", static (a, b) => $"S<{a}, {b}>");
#>
    public static <#= set #> Builder<<#= types #>>() => default;
    public static TypeSet Of<<#= types #>>() => Get<<#= set #>>();
<#
    }
#>
}
